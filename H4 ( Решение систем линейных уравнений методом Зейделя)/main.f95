program main ! Решение систем линейных уравнений методом Зейделя
use subprograms ! Модуль с процедурами
implicit none

integer n                                 ! Число незвестных в уравнениях
real(8), allocatable, dimension(:,:) :: A ! Матрица коэффициентов и свободных членов
real(8) eps                               ! Точность итерационных вычислений (абсолютная)
integer answer                            ! Останавливать программу при отсутствии ... ? (см. в input)
integer np1_limit                         ! Предельное количество столбцов в форматном выводе
integer k_lim                             ! Предельное число итераций
integer show_check                        ! Показывать список check и x для каждой итерации?
integer do_get_diag_dom                   ! Пытаться преобразовывать матрицу к диагональному преобладанию? 
integer x_0_answer                        ! Брать за нулевое значение x = 0 или x = B(:,n+1)?
integer ier, i , j                        ! Вспомогательные переменные
character(20) f1, f2                      ! Вспомогательные переменные для автоформатирования
real(8) t1, t2                            ! Переменные времени

! Считывание числа неизвестных
read(*,'()'); read(*,*) n

! Считывание точности итерационных вычислений
read(*,'(/)'); read(*,*) eps

! Считывание предельного числа итераций
read(*,'(/)'); read(*,*) k_lim

! Считывание ответа на вопрос о необходимости останавливать программу при
! отсутствии диагонального преобладания или хотя бы одного строгого неравенства
read(*,'(//)'); read(*,*) answer

! Считывание ответа на вопрос о показе check и x для каждой итерации
read(*,'(/)'); read(*,*) show_check

! Считывание ответа на вопрос о попытке преобразовать матрицу к диагональному преобладанию
read(*,'(/)'); read(*,*) do_get_diag_dom

! Считывание ответа на вопрос о векторе начальных значений x
read(*,'(/)'); read(*,*) x_0_answer

! Считывание значения предельного количества столбцов в форматном выводе
read(*,'(/)'); read(*,*) np1_limit; read(*,'(//)')

! Выделение памяти под матрицу
allocate (A(n,n+1), stat=ier); if (ier .ne. 0) stop 'Не могу выделить память для матрицы A'

! Считывание коэффициентов и свободных членов в матрицу
read(*,*) ((A(i,j),j=1,n+1),i=1,n)

! Вывод известной информации:
write(*,'(/,4x,a,/)') 'Решение систем линейных уравнений методом Гаусса'
write(*,'(4x,a,/)') 'Предварительная обработка матрицы:'

write(f1,*) n+1
f2='(/'//trim(adjustl(f1))//'(4x,'//trim(adjustl(f1))//'e15.7/))'

if (n+1 .le. np1_limit) then
write(*,'(4x,a)') 'Матрица коэффициентов и свободных членов:'
write(*,f2) ((A(i,j),j=1,n+1),i=1,n)
endif

write(f1,*) n
write(*,'(4x,a,1x,a)') 'Число неизвестных: ', trim(adjustl(f1))

! Вызовы процедур, вывод результата
call cpu_time(t1)

call choice_test(A,n,f2,np1_limit) ! Процедура осуществления частичного выбора
call diag_dom(A,n,f2,0,answer,np1_limit,do_get_diag_dom) ! Процедура проверки/получения диагонального преобладания
call seidel(A,n,eps,k_lim,f2,np1_limit,show_check,answer,x_0_answer) ! Процедура, выполняющая исполнительную часть метода Зейделя

call cpu_time(t2)
write(*,'(4x,a,e15.7,/)') 'Время выполнения:', t2-t1

deallocate(A)

end program
