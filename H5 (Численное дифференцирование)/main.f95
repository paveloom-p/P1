program main ! Численное дифференцирование
use subprograms ! Модуль с процедурами
implicit none

real(8) a, b                                ! Границы промежутка
integer n                                   ! Число промежутков деления
real(8) h                                   ! Шаг для равномерной сетки
real(8) z                                   ! Аргумент, при котором будем искать значения y, y', y"
real(8), allocatable, dimension(:) :: x, y  ! Массивы аргументов и значений функции
real(8) y_x, dy_x, ddy_x                    ! Значения функции, первой и второй производных в точке x
real(8) y_x_ph, y_x_mh                      ! Значения функции при аргументе, на шаг большем/меньшем, чем x
integer x_y_show                            ! Ответ на вопрос о выводе таблицы узлов и значений в них
integer ier, i                              ! Вспомогательные переменные
real(8) t1, t2                              ! Переменные времени
real(8) i_d, n_d                            ! Овеществления

! Считывание аргумента, в котором будем искать значение функции
read(*,'()'); read(*,*) z; read(*,'(/)')

! Считывание границ промежутка
read(*,*) a, b; read(*,'(/)')

! Считывание числа промежутков деления
read(*,*) n; read(*,'(/)')

!Считывание ответа на вопрос о выводе таблицы узлов и значений в них
read(*,*) x_y_show; read(*,'(/)')

! Выделение памяти под массивы
allocate (x(0:n), stat=ier); if (ier .ne. 0) stop 'Не могу выделить память для массива x'
allocate (y(0:n), stat=ier); if (ier .ne. 0) stop 'Не могу выделить память для массива y'

! Формирование равномерной сетки, считывание массива y
n_d = n
h = (b - a) / n_d
        
do i = 0, n
        i_d = i
        x(i) = a + i_d * h
        read(*,*) y(i)
enddo 

! Вывод известной информации:
write(*,'(/,4x,a)') 'Численное дифференцирование'
write(*,'(/,4x,a,/)') 'Используется равномерная сетка:'

write(*,'(4x,a,/,4x,a,e19.7,/,4x,a,e19.7)') 'Границы промежутка:', 'a = ', a, 'b = ', b

write(*,'(/,4x,a,e16.10)') 'Шаг: ', h

if (x_y_show .ne. 0) then
write(*,'(/,4x,a,//,7x,a,14x,a,21x,a)') 'Узлы и значения в них:', '№', 'X', 'Y'
write(*,'(t3,i6,2x,e17.7,2x,e17.7)') (i,x(i),y(i),i=0,n)
endif

write(*,'(/,4x,a,/,4x,a,1x,e16.7)') 'Ищем значения y(x), y''(x), y"(x) в точке', 'x    =', z

! Вызов функций, вывод результата
write(*,'(/,4x,a,/)') 'Результат:'
call cpu_time(t1)

y_x = Lagrange(x,y,n,z)      ! Вычисление y(x)
y_x_ph = Lagrange(x,y,n,z+h) ! Вычисление y(x+h)
y_x_mh = Lagrange(x,y,n,z-h) ! Вычисление y(x-h)

dy_x  = (y_x_ph - y_x_mh) / (2d0 * h)           ! Вычисление y'(x)
ddy_x = (y_x_ph - 2d0 * y_x + y_x_mh) / (h * h) ! Вычисление y"(x)

call cpu_time(t2)

write(*,'(4x,a,e14.7)') 'y (x)  = ', y_x
write(*,'(4x,a,e14.7)') "y'(x)  ≈ ", dy_x
write(*,'(4x,a,e14.7,/)') 'y"(x)  ≈ ', ddy_x

write(*,'(4x,a,e15.7,/)') 'Время выполнения:', t2-t1

deallocate(x, y)

end program
